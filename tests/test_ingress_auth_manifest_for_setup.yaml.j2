# Creates istio gateway, virtualService, and Service to support access to the Bookinfo application through
# a second port.  This simulates traffic like seen in knative or elsewhere that adds its own gateway port alongside
# the kubeflow setup, so we can confirm we have only applied auth restrictions to some ports on our gateway

# LoadBalancer for ingress of external communication into cluster
apiVersion: v1
kind: Service
metadata:
  name: {{ workload_name }}-loadbalancer
  namespace: {{ namespace }}
spec:
  ports:
    - name: http2
      port: 80
      protocol: TCP
      targetPort: {{ gateway_port }}
  selector:
    istio: ingressgateway
  type: 'LoadBalancer'
---
# Gateway for ingress
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{ workload_name }}
  namespace: {{ namespace }}
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '*'
    port:
      name: http
      number: {{ gateway_port }}
      protocol: HTTP
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ workload_name }}
  namespace: {{ namespace }}
spec:
  gateways:
  - {{ namespace }}/{{ workload_name }}
  hosts:
  - '*'
  http:
  - match:
    - uri:
        exact: /test
    route:
    - destination:
        host: {{ workload_name }}
        port:
          number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: {{ workload_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ workload_name }}
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: html
  selector:
    app: {{ workload_name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ workload_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ workload_name }}
spec:
  selector:
    matchLabels:
      app: {{ workload_name }}
  template:
    metadata:
      labels:
        app: {{ workload_name }}
    spec:
      containers:
      - name: workload
        image: ksonny4/simple-docker-http-server
        ports:
        - containerPort: 8080
          name: html
---
