[flake8]
max-line-length = 100

[tox]
skipsdist = True
envlist = {pilot,gateway}-{unit,lint},integration, integration-tls-provider, integration-tls-secret

[vars]
all_path = {[vars]src_path} {[vars]tst_path}
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/

[testenv]
allowlist_externals = tox
setenv = 
	pilot: CHARM = pilot
	gateway: CHARM = gateway
	unit: TYPE = unit
	lint: TYPE = lint
passenv = 
	KUBECONFIG
commands = 
	tox -c charms/istio-{env:CHARM} -e {env:TYPE} {posargs}
deps = 
	poetry>=2.1.3

[testenv:update-requirements]
commands = 
	# updating all groups' locked dependencies:
	poetry lock --regenerate
	# updating all groups' locked dependencies for every charm subfolder:
	find charms/ -maxdepth 1 -mindepth 1 -type d -exec bash -c "cd {} && poetry lock --regenerate" \;
description = Update requirements, including those in charm subfolders
allowlist_externals = find
skip_install = true

[testenv:fmt]
commands = 
	isort {[vars]tst_path}
	black {[vars]tst_path}
description = Apply coding style standards to code
commands_pre = 
	poetry install --only fmt
skip_install = true

[testenv:lint]
commands = 
	# uncomment the following line if this charm owns a lib
	# codespell {[vars]lib_path}
	codespell {toxinidir}/. --skip {toxinidir}/./.git --skip {toxinidir}/./.tox \
	--skip {toxinidir}/./build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
	--skip {toxinidir}/./.mypy_cache \
	--skip {toxinidir}/./icon.svg --skip *.json.tmpl \
	--skip *.lock
	# pflake8 wrapper supports config from pyproject.toml
	pflake8 {[vars]tst_path}
	isort --check-only --diff {[vars]tst_path}
	black --check --diff {[vars]tst_path}
description = Check code against coding style standards
commands_pre = 
	poetry install --only lint
skip_install = true

[testenv:integration]
allowlist_externals = rm
commands = 
	pytest --show-capture=no --log-cli-level=INFO -vvs --tb=native {posargs} tests/test_bundle.py
commands_pre = 
	poetry install --only integration
skip_install = true

[testenv:integration-tls-provider]
allowlist_externals = rm
commands = 
	pytest --show-capture=no --log-cli-level=INFO -vvs --tb=native {posargs} tests/test_bundle_tls_provider.py
commands_pre = 
	poetry install --only integration
skip_install = true

[testenv:integration-tls-secret]
allowlist_externals = rm
commands = 
	pytest --show-capture=no --log-cli-level=INFO -vvs --tb=native {posargs} tests/test_bundle_tls_secret.py
commands_pre = 
	poetry install --only integration
skip_install = true

[testenv:cos-integration]
allowlist_externals = rm
commands = 
	pytest --show-capture=no --log-cli-level=INFO -vvs --tb=native {posargs} tests/test_cos_integration.py
commands_pre = 
	poetry install --only integration
skip_install = true

[testenv:integration-istio-pilot-upgrade]
allowlist_externals = rm
commands = 
	pytest --show-capture=no --log-cli-level=INFO -vvs --tb=native {posargs} tests/test_istio-pilot_upgrade.py
commands_pre = 
	poetry install --only integration
skip_install = true
