---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-{{ kind }}gateway
    install.operator.istio.io/owning-resource: unknown
    istio: {{ kind }}gateway
    istio.io/rev: default
    operator.istio.io/component: "{{ kind|capitalize }}Gateways"
    release: istio
  name: istio-{{ kind }}gateway-workload-service-account
  namespace: {{ namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-{{ kind }}gateway
    install.operator.istio.io/owning-resource: unknown
    istio: {{ kind }}gateway
    istio.io/rev: default
    operator.istio.io/component: {{ kind|capitalize }}Gateways
    release: istio
  name: istio-{{ kind }}gateway-workload
  namespace: {{ namespace }}
spec:
  selector:
    matchLabels:
      app: istio-{{ kind }}gateway
      istio: {{ kind }}gateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-{{ kind }}gateway
        chart: gateways
        heritage: Tiller
        install.operator.istio.io/owning-resource: unknown
        istio: {{ kind }}gateway
        istio.io/rev: default
        operator.istio.io/component: {{ kind|capitalize }}Gateways
        release: istio
        service.istio.io/canonical-name: istio-{{ kind }}gateway-workload
        service.istio.io/canonical-revision: latest
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
              weight: 2
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      containers:
        - args:
            - proxy
            - router
            - --domain
            - {{ namespace }}.svc.cluster.local
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
          env:
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: {{ pilot_host }}
            - name: CA_ADDR
              value: {{ pilot_host }}:{{ pilot_port }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_WORKLOAD_NAME
              value: istio-{{ kind }}gateway-workload
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/apps/v1/namespaces/{{ namespace }}/deployments/istio-{{ kind }}gateway-workload
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_META_UNPRIVILEGED_POD
              value: "true"
            - name: ISTIO_META_ROUTER_MODE
              value: standard
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
          image: docker.io/istio/proxyv2:1.11.0
          name: istio-proxy
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /etc/istio/config
              name: config-volume
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /var/run/secrets/tokens
              name: istio-token
              readOnly: true
            - mountPath: /var/lib/istio/data
              name: istio-data
            - mountPath: /etc/istio/pod
              name: podinfo
            - mountPath: /etc/istio/{{ kind }}gateway-certs
              name: {{ kind }}gateway-certs
              readOnly: true
            - mountPath: /etc/istio/{{ kind }}gateway-ca-certs
              name: {{ kind }}gateway-ca-certs
              readOnly: true
      securityContext:
        fsGroup: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      serviceAccountName: istio-{{ kind }}gateway-workload-service-account
      volumes:
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
              - fieldRef:
                  fieldPath: metadata.annotations
                path: annotations
          name: podinfo
        - emptyDir: {}
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - configMap:
            name: istio
            optional: true
          name: config-volume
        - name: {{ kind }}gateway-certs
          secret:
            optional: true
            secretName: istio-{{ kind }}gateway-workload-certs
        - name: {{ kind }}gateway-ca-certs
          secret:
            optional: true
            secretName: istio-{{ kind }}gateway-workload-ca-certs
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: istio-{{ kind }}gateway
    install.operator.istio.io/owning-resource: unknown
    istio: {{ kind }}gateway
    istio.io/rev: default
    operator.istio.io/component: "{{ kind|capitalize }}Gateways"
    release: istio
  name: istio-{{ kind }}gateway-workload
  namespace: {{ namespace }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-{{ kind }}gateway
      istio: {{ kind }}gateway
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: "{{ kind|capitalize }}Gateways"
    release: istio
  name: istio-{{ kind }}gateway-workload-sds
  namespace: {{ namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: "{{ kind|capitalize }}Gateways"
    release: istio
  name: istio-{{ kind }}gateway-workload-sds
  namespace: {{ namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-{{ kind }}gateway-workload-sds
subjects:
  - kind: ServiceAccount
    name: istio-{{ kind }}gateway-workload-service-account
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istio-{{ kind }}gateway
    install.operator.istio.io/owning-resource: unknown
    istio: {{ kind }}gateway
    istio.io/rev: default
    operator.istio.io/component: "{{ kind|capitalize }}Gateways"
    release: istio
  name: istio-{{ kind }}gateway-workload
  namespace: {{ namespace }}
spec:
  ports:
    - name: http2
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    istio: {{ kind }}gateway
  type: {{ 'ClusterIP' if kind == 'egress' else 'LoadBalancer' }}
