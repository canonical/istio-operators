name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '0 8 * * TUE'
  # Triggered on push by .github/workflows/release.yaml
  workflow_call:
    outputs:
      artifact-prefix:
        description: build_charm.yaml `artifact-prefix` output
        value: ${{ jobs.build.outputs.artifact-prefix }}
      charm-paths:
        description: paths for all charms in this repo
        value: ${{ jobs.get-charm-paths-channel.outputs.charm-paths }}
      channel:
        description: Charmhub channel the charms are released to
        value: ${{ jobs.get-charm-paths-channel.outputs.charm-channel }}

jobs:
  get-charm-paths-channel:
    name: Get charm paths and charmhub channel
    runs-on: ubuntu-latest
    outputs:
      charm-paths: ${{ steps.get-charm-paths.outputs.charm-paths }}
      charm-channel: ${{ steps.select-channel.outputs.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get paths for all charms in this repo
        id: get-charm-paths
        uses: canonical/kubeflow-ci/actions/get-charm-paths@main
      - name: Select charmhub channel
        uses: canonical/charming-actions/channel@2.6.2
        id: select-channel

  lib-check:
    name: Check libraries
    needs:
      - get-charm-paths-channel
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: ${{ matrix.charm }}

  lint:
    name: Lint Code
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update && sudo apt install tox
      - run: tox -e ${{ matrix.charm }}-lint

  unit:
    name: Unit Test
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update && sudo apt install tox
      - run: tox -e ${{ matrix.charm }}-unit

  terraform-checks:
    name: Terraform
    needs:
      - get-charm-paths-channel
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/terraform-checks.yaml@main
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    with:
      charm-path: ${{ matrix.charm }}

  build:
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    name: Build charm | ${{ matrix.charm }}
    needs:
      - get-charm-paths-channel
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v29.2.0
    with:
      path-to-charm-directory: ${{ matrix.charm }}
        
  integration:
    name: Integration Test
    needs: build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        # We test with highest and lowest supported versions of k8s
        microk8s-versions:
          - 1.29-strict/stable
          - 1.31-strict/stable
        integration-types:
          - integration
          - integration-tls-provider
          - integration-tls-secret
    steps:
      # Ideally we'd use self-hosted runners, but this effort is still not stable
      # This action will remove unused software (dotnet, haskell, android libs, codeql,
      # and docker images) from the GH runner.
      # This leaves ~45GB free as of 2024-04-10, but this amount has varied as GH changed their
      # runners
      - name: Maximise GH runner space
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: ${{ matrix.microk8s-versions }}
          microk8s-addons: "dns hostpath-storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 3.6/stable

      - name: Download packed charm(s)
        id: download-charms
        timeout-minutes: 5
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build.outputs.artifact-prefix }}-*
          merge-multiple: true

      - name: Run integration tests
        run: |
          juju add-model test-istio
          tox -e ${{ matrix.integration-types }} -- --model test-istio --charms-path=${{ github.workspace }}/charms/
        timeout-minutes: 80

      - name: Setup Debug Artifact Collection
        run: mkdir tmp
        if: failure()

      - name: Collect charmcraft logs
        if: failure()
        run: |
          cat /home/runner/.local/state/charmcraft/log/charmcraft-*.log | tee tmp/charmcraft.log

      - name: Collect Juju status
        if: failure()
        run: juju status | tee tmp/juju-status.txt

      - name: Collect Juju log
        if: failure()
        run: juju debug-log --replay --no-tail | tee tmp/juju-status.txt

      - name: Collect Kube status
        if: failure()
        run: |
          kubectl get all -A | tee tmp/kube-summary.txt
          kubectl describe virtualservices -A | tee tmp/kube-virtualservices.txt
          kubectl describe gateways -A | tee tmp/kube-gateways.txt
          kubectl describe deployments -A | tee tmp/kube-deployments.txt
          kubectl describe replicasets -A | tee tmp/kubectl-replicasets.txt
          kubectl exec -n test-istio istio-pilot-0 --container charm -- agents/unit-istio-pilot-0/charm/istioctl analyze -n test-istio | tee tmp/istioctl-analyze.txt

      - name: Collect Kube logs
        if: failure()
        run: |
          kubectl logs -n test-istio --tail 1000 -lapp.kubernetes.io/name=istio-pilot -c charm | tee tmp/istio-pilot.log
          kubectl logs -n test-istio --tail 1000 -lapp.kubernetes.io/name=istio-ingressgateway-operator -c charm | tee tmp/istio-ingressgateway-operator.log

      - name: Upload debug artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-run-artifacts
          path: tmp

  integration-observability:
    name: Observability Integration Test
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.31-strict/stable
          microk8s-addons: "dns hostpath-storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 3.6/stable

      - name: Download packed charm(s)
        id: download-charms
        timeout-minutes: 5
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build.outputs.artifact-prefix }}-*
          merge-multiple: true

      - name: Run observability integration tests
        run: |
          juju add-model cos-test
          tox -vve cos-integration -- --model cos-test --charms-path=${{ github.workspace }}/charms

      - run: kubectl get pod/prometheus-k8s-0 -n knative-test -o=jsonpath='{.status}'
        if: failure()

  release:
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    name: Release charm to Charmhub branch | ${{ matrix.charm }}
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - get-charm-paths-channel
      - build
    uses: canonical/data-platform-workflows/.github/workflows/release_charm.yaml@v29.2.0
    with:
      channel: ${{ needs.get-charm-paths-channel.outputs.charm-channel }}
      artifact-prefix: ${{ needs.build.outputs.artifact-prefix }}
      path-to-charm-directory: ${{ matrix.charm }}
      create-git-tags: false
    secrets:
      charmhub-token: ${{ secrets.CHARMCRAFT_CREDENTIALS }}
