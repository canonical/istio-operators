# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
# DEBUG: Removed during debugging
#  lib-check:
#    name: Check libraries
#    strategy:
#      matrix:
#        charm:
#        - istio-gateway
#        - istio-pilot
#    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
#    secrets: inherit
#    with:
#        charm-path: ./charms/${{ matrix.charm }}
#  lint:
#    name: Lint Code
#    runs-on: ubuntu-20.04
#    strategy:
#      matrix:
#        charm: [pilot, gateway]
#    steps:
#    - uses: actions/checkout@v3
#    - run: sudo apt update && sudo apt install tox
#    - run: tox -e ${{ matrix.charm }}-lint
#
#  unit:
#    name: Unit Test
#    runs-on: ubuntu-20.04
#    strategy:
#      matrix:
#        charm: [pilot, gateway]
#    steps:
#    - uses: actions/checkout@v3
#    - run: sudo apt update && sudo apt install tox
#    - run: tox -e ${{ matrix.charm }}-unit

  integration:
    name: Integration Test
    runs-on: ubuntu-20.04

    steps:
    - name: Check out repo
      uses: actions/checkout@v3

    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        provider: microk8s
        channel: 1.24/stable
        charmcraft-channel: latest/candidate
        # TODO: Unpin this when this bug is resolved: https://bugs.launchpad.net/juju/+bug/1992833.
        #       In particular, these tests failed deploying the prometheus-k8s charm where it gets an error in
        #       the "metrics-endpoint-relation-changed" hook.
        bootstrap-options: --agent-version="2.9.34"
    # TODO: Remove once the actions-operator does this automatically
    - name: Configure kubectl
      run: |
        sg microk8s -c "microk8s config > ~/.kube/config"

    # DEBUG: added keep-models to ensure our logs are available during dumping
    - run: sg microk8s -c 'KUBECONFIG=/home/runner/.kube/config tox -e integration
        -- --model kubeflow --destructive-mode --keep-models'
      timeout-minutes: 80

    - name: Setup Debug Artifact Collection
      run: mkdir tmp
      if: failure()

    - name: Collect charmcraft logs
      if: failure()
      run: cat /home/runner/snap/charmcraft/common/cache/charmcraft/log/charmcraft-*.log
        | tee tmp/charmcraft.log

    - name: Collect Juju status
      if: failure()
      run: juju status | tee tmp/juju-status.txt

    - name: Collect Juju log
      if: failure()
      run: juju debug-log --replay --no-tail | tee tmp/juju-status.txt

    - name: Collect Juju status log
      if: failure()
      run: |
        juju show-status-log istio-pilot/0 | tee tmp/juju-status-log-istio-pilot.txt
        juju show-status-log istio-ingressgateway/0 | tee tmp/juju-status-log-istio-ingressgateway.txt

    - name: Collect Kube status
      if: failure()
      run: |
        kubectl get all -A | tee tmp/kube-summary.txt
        kubectl describe virtualservices -A | tee tmp/kube-virtualservices.txt
        kubectl describe gateways -A | tee tmp/kube-gateways.txt
        kubectl describe envoyfilters -A | tee tmp/kube-envoyfilters.txt
        kubectl describe deployments -A | tee tmp/kube-deployments.txt
        kubectl describe replicasets -A | tee tmp/kubectl-replicasets.txt
        kubectl exec -n kubeflow istio-pilot-0 --container charm -- agents/unit-istio-pilot-0/charm/istioctl analyze -n kubeflow | tee tmp/istioctl-analyze.txt

    - name: Collect Kube logs
      if: failure()
      run: |
        kubectl logs -n kubeflow --tail 1000 -lapp.kubernetes.io/name=istio-pilot -c charm | tee tmp/istio-pilot.log
        kubectl logs -n kubeflow --tail 1000 -lapp.kubernetes.io/name=istio-ingressgateway-operator -c charm | tee tmp/istio-ingressgateway-operator.log

    - name: Upload debug artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-run-artifacts
        path: tmp

# DEBUG: Removed during CI debugging
#  integration-observability:
#    name: Observability Integration Test
#    runs-on: ubuntu-20.04
#
#    steps:
#      - name: Check out repo
#        uses: actions/checkout@v3
#
#      - name: Setup operator environment
#        uses: charmed-kubernetes/actions-operator@main
#        with:
#          provider: microk8s
#          channel: 1.24/stable
#          # Pinning juju agent to 2.9.42 to keep compatibility with pythonlib-juju<3
#          bootstrap-options: --agent-version="2.9.42"
#      - run: sg microk8s -c "microk8s enable metallb:'10.64.140.43-10.64.140.49,192.168.0.105-192.168.0.111'"
#      - run: juju add-model cos-test
#
#      - name: Run observability integration tests
#
#        run: tox -vve cos-integration -- --model cos-test --destructive-mode
#        env:
#          KUBECONFIG: /home/runner/.kube/config
#
#      - run: kubectl get pod/prometheus-k8s-0 -n knative-test -o=jsonpath='{.status}'
#        if: failure()
