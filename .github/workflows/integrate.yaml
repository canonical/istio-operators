# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    strategy:
      matrix:
        charm:
        - istio-gateway
        - istio-pilot
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: ./charms/${{ matrix.charm }}
  lint:
    name: Lint Code
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt update && sudo apt install tox
      - run: tox -e ${{ matrix.charm }}-lint

  unit:
    name: Unit Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt update && sudo apt install tox
      - run: tox -e ${{ matrix.charm }}-unit

  integration:
    name: Integration Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        microk8s-versions:
          - 1.25-strict/stable
          - 1.26-strict/stable
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
  
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: ${{ matrix.microk8s-versions }}
          microk8s-addons: "dns hostpath-storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 2.9/stable
          charmcraft-channel: latest/candidate
  
      - name: Run integration tests
        run: |
          juju add-model kubeflow
          # Using destructive mode because of https://github.com/canonical/charmcraft/issues/1132
          # and https://github.com/canonical/charmcraft/issues/1138
          tox -e integration -- --model kubeflow --destructive-mode
        timeout-minutes: 80
  
      - name: Setup Debug Artifact Collection
        run: mkdir tmp
        if: failure()
  
      - name: Collect charmcraft logs
        if: failure()
        run: cat /home/runner/snap/charmcraft/common/cache/charmcraft/log/charmcraft-*.log
          | tee tmp/charmcraft.log
  
      - name: Collect Juju status
        if: failure()
        run: juju status | tee tmp/juju-status.txt
  
      - name: Collect Juju log
        if: failure()
        run: juju debug-log --replay --no-tail | tee tmp/juju-status.txt
  
      - name: Collect Kube status
        if: failure()
        run: |
          kubectl get all -A | tee tmp/kube-summary.txt
          kubectl describe virtualservices -A | tee tmp/kube-virtualservices.txt
          kubectl describe gateways -A | tee tmp/kube-gateways.txt
          kubectl describe deployments -A | tee tmp/kube-deployments.txt
          kubectl describe replicasets -A | tee tmp/kubectl-replicasets.txt
          kubectl exec -n kubeflow istio-pilot-0 --container charm -- agents/unit-istio-pilot-0/charm/istioctl analyze -n kubeflow | tee tmp/istioctl-analyze.txt
  
      - name: Collect Kube logs
        if: failure()
        run: |
          kubectl logs -n kubeflow --tail 1000 -lapp.kubernetes.io/name=istio-pilot -c charm | tee tmp/istio-pilot.log
          kubectl logs -n kubeflow --tail 1000 -lapp.kubernetes.io/name=istio-ingressgateway-operator -c charm | tee tmp/istio-ingressgateway-operator.log
  
      - name: Upload debug artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-run-artifacts
          path: tmp

  integration-observability:
    name: Observability Integration Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        microk8s-versions:
          - 1.25-strict/stable
          - 1.26-strict/stable
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: ${{ matrix.microk8s-versions }}
          microk8s-addons: "dns hostpath-storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 2.9/stable
          charmcraft-channel: latest/candidate
 
      - name: Run observability integration tests
        run: |
          juju add-model cos-test
          # Using destructive mode because of https://github.com/canonical/charmcraft/issues/1132
          # and https://github.com/canonical/charmcraft/issues/1138
          tox -vve cos-integration -- --model cos-test --destructive-mode

      - run: kubectl get pod/prometheus-k8s-0 -n knative-test -o=jsonpath='{.status}'
        if: failure()
