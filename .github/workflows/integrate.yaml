# reusable workflow triggered by other actions
name: Continuous Integration

on:
  workflow_call:
    secrets:
      charmcraft-credentials:
        required: true

jobs:

  lib-check:
    name: Check libraries
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm:
        - istio-gateway
        - istio-pilot
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Check libs
      uses: canonical/charming-actions/check-libraries@2.1.1
      with:
        charm-path: ./charms/${{ matrix.charm }}
        credentials: "${{ secrets.charmcraft-credentials }}"
        github-token: "${{ secrets.GITHUB_TOKEN }}"
  lint:
    name: Lint Code
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt update && sudo apt install tox
    - run: tox -e ${{ matrix.charm }}-lint

  unit:
    name: Unit Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [pilot, gateway]
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt update && sudo apt install tox
    - run: tox -e ${{ matrix.charm }}-unit

  integration:
    name: Integration Test
    runs-on: ubuntu-20.04

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - uses: balchua/microk8s-actions@v0.3.1
      with:
        # TODO: Pinned to <1.25 until we update to istio 1.15
        channel: '1.24/stable'
        addons: '["dns", "storage", "rbac", "metallb:10.64.140.43-10.64.140.49"]'

    - name: Install dependencies
      run: |
        set -eux
        sudo snap install charmcraft --classic --channel=latest/candidate
        sudo snap install juju --classic
        sudo snap install juju-bundle --classic
        sudo snap install juju-wait --classic
        sudo apt update
        sudo apt install tox

    - name: Wait before bootstrap
      run: |
        set -eux
        sg microk8s -c 'microk8s status --wait-ready'
        kubectl wait --for=condition=available --timeout=5m -nkube-system deployment/coredns deployment/hostpath-provisioner

    - name: Bootstrap
      run: |
        # Pinned until this bug is resolved: https://bugs.launchpad.net/juju/+bug/1992833
        sg microk8s -c 'juju bootstrap microk8s uk8s --agent-version=2.9.34'
        sg microk8s -c 'juju add-model istio-system'

    - run: sg microk8s -c 'KUBECONFIG=/home/runner/.kube/config tox -e integration
        -- --model istio-system --destructive-mode'
      timeout-minutes: 40

    - name: Setup Debug Artifact Collection
      run: mkdir tmp
      if: failure()

    - name: Collect charmcraft logs
      if: failure()
      run: cat /home/runner/snap/charmcraft/common/cache/charmcraft/log/charmcraft-*.log
        | tee tmp/charmcraft.log

    - name: Collect Juju status
      if: failure()
      run: juju status | tee tmp/juju-status.txt

    - name: Collect Juju log
      if: failure()
      run: juju debug-log --replay --no-tail | tee tmp/juju-status.txt

    - name: Collect Kube status
      if: failure()
      run: |
        kubectl get all -A | tee tmp/kube-summary.txt
        kubectl describe virtualservices -A | tee tmp/kube-virtualservices.txt
        kubectl describe gateways -A | tee tmp/kube-gateways.txt
        kubectl describe deployments -A | tee tmp/kube-deployments.txt
        kubectl describe replicasets -A | tee tmp/kubectl-replicasets.txt
        kubectl exec -n istio-system istio-pilot-0 --container charm -- agents/unit-istio-pilot-0/charm/istioctl analyze -n default | tee tmp/istioctl-analyze.txt

    - name: Collect Kube logs
      if: failure()
      run: |
        kubectl logs -n istio-system --tail 1000 -lapp.kubernetes.io/name=istio-pilot -c charm | tee tmp/istio-pilot.log
        kubectl logs -n istio-system --tail 1000 -lapp.kubernetes.io/name=istio-ingressgateway-operator -c charm | tee tmp/istio-ingressgateway-operator.log

    - name: Upload debug artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-run-artifacts
        path: tmp

  integration-observability:
    name: Observability Integration Test
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.22/stable
          # Pinned to 2.9.34 due to https://bugs.launchpad.net/juju/+bug/1992833
          # This should be fixed on release of juju 2.9.36 + libjuju 3.0.3
          bootstrap-options: --agent-version="2.9.34"
      - run: sg microk8s -c "microk8s enable metallb:'10.64.140.43-10.64.140.49,192.168.0.105-192.168.0.111'"
      - run: juju add-model cos-test

      - name: Run observability integration tests

        run: tox -vve cos-integration -- --model cos-test --destructive-mode
        env:
          KUBECONFIG: /home/runner/.kube/config

      - run: kubectl get pod/prometheus-k8s-0 -n knative-test -o=jsonpath='{.status}'
        if: failure()
